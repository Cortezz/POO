#BlueJ class context
comment0.params=x
comment0.target=boolean\ stringIsNum(java.lang.String)
comment0.text=\n\ Verifica\ se\ uma\ String\ ??\ composta\ apenas\ por\ Ints.\n
comment1.params=x
comment1.target=boolean\ stringIsDouble(java.lang.String)
comment10.params=
comment10.target=java.lang.String\ getClimaValido()
comment11.params=pergunta
comment11.target=java.util.GregorianCalendar\ getDataValida(java.lang.String)
comment11.text=\n\ Pergunta\ ao\ utilizador\ por\ um\ dia\ mes\ e\ ano\ e\ verifica\ se\ ??\ uma\ data\ poss??vel\n\ Caso\ for,\ retorna\ essa\ data\ em\ tipo\ GregorianCalendar\n\ Caso\ n??o\ for,\ torna\ a\ perguntar\ por\ uma\ data\n
comment12.params=pergunta
comment12.target=java.util.GregorianCalendar\ getDataValidaFutura(java.lang.String)
comment13.params=
comment13.target=int\ getAlturaValida()
comment13.text=\n\ Pede\ ao\ utilizador\ uma\ altura\n\ Devolve\ altura\ se\ for\ v??lida\n
comment14.params=
comment14.target=double\ getPesoValido()
comment14.text=\n\ Pede\ ao\ utilizador\ um\ peso\n\ Devolve\ peso\ se\ for\ v??lido\n
comment15.params=
comment15.target=java.lang.String\ getDesportoFavoritoValido()
comment15.text=\n\ Pede\ ao\ utilizador\ o\ seu\ desporto\ favorito\n\ Retorna\ o\ desporto\ favorito\ se\ for\ v??lido\n
comment16.params=limiteInferior\ limiteSuperior
comment16.target=double\ getTipoDeContaValido(double,\ double)
comment17.params=
comment17.target=int\ getTempoValido()
comment18.params=pergunta
comment18.target=double\ getDistanciaValida(java.lang.String)
comment18.text=\n\ Verifica\ se\ ??\ uma\ distancia\ ??\ v??lida\n\ Se\ sim\ devolve\ a\ distancia\n
comment19.params=limiteInferior\ limiteSuperior
comment19.target=int\ getClimaValido(int,\ int)
comment2.params=email
comment2.target=boolean\ opcaoIsEmail(java.lang.String)
comment2.text=\n\ Verifica\ se\ um\ Email\ tem\ o\ formato\ correto\n
comment20.params=x
comment20.target=java.lang.String\ mensagemDeErro(int)
comment3.params=limiteInferior\ limiteSuperior\ x
comment3.target=boolean\ estaNoIntervalo(double,\ double,\ double)
comment3.text=\n\ Verifica\ se\ um\ n??mero\ x\ est??\ no\ intervalo\ [limiteInferior,\ limiteSuperior]\n
comment4.params=passUm\ passDois
comment4.target=boolean\ ambasPasswordsIguais(java.lang.String,\ java.lang.String)
comment4.text=\n\ Verifica\ se\ duas\ strings\ s??o\ iguais\n
comment5.params=pergunta\ limiteInferior\ limiteSuperior
comment5.target=int\ getOpcaoValida(java.lang.String,\ int,\ int)
comment5.text=\n\ Pede\ ao\ utilizador\ para\ introduzir\ uma\ opcao\ e\ verifica\ se\ est??\ no\ intervalo\ [limiteInferiorm\ limiteSuperior]\n
comment6.params=pergunta
comment6.target=java.lang.String\ getEmailValido(java.lang.String)
comment6.text=\n\ Pede\ ao\ utilizador\ para\ inserir\ um\ email\n\ Verifica\ se\ tem\ o\ formato\ correto\n\ \n
comment7.params=
comment7.target=java.lang.String\ getPasswordsValidas()
comment7.text=\n\ Pede\ ao\ utilizador\ para\ inserir\ a\ password\ desejada\ duas\ vezes\n\ Se\ forem\ iguais\ retorna\ a\ password\n\ Se\ forem\ diferentes\ torna\ a\ perguntar\ por\ passwords\n
comment8.params=
comment8.target=java.lang.String\ getNomeValido()
comment8.text=\n\ Pede\ ao\ utilizador\ o\ seu\ nome\n\ Devolve\ o\ nome\n
comment9.params=escolhaUm\ escolhaDois
comment9.target=java.lang.String\ getEscolhaBinaria(java.lang.String,\ java.lang.String)
numComments=21
