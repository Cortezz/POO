#BlueJ class context
comment0.params=
comment0.target=QuadroRecordes()
comment0.text=\n\ \ Construtores\n
comment1.params=q
comment1.target=QuadroRecordes(QuadroRecordes)
comment10.params=
comment10.target=java.lang.String\ recordeCiclismo()
comment11.params=
comment11.target=java.lang.String\ recordeCaminhada()
comment12.params=
comment12.target=java.lang.String\ recordeCorrida()
comment13.params=
comment13.target=QuadroRecordes\ clone()
comment14.params=q
comment14.target=boolean\ equals_aux(QuadroRecordes)
comment15.params=o
comment15.target=boolean\ equals(java.lang.Object)
comment2.params=
comment2.target=java.util.HashMap\ getQuadro()
comment2.text=\n\ Metodos\ gets.\n
comment3.params=
comment3.target=int\ getTamanho()
comment4.params=desporto\ tempo\ distancia
comment4.target=void\ testaRecorde(java.lang.String,\ int,\ double)
comment4.text=\n\ \ Metodo\ que\ envia\ o\ recorde\ a\ ser\ testado\ consoante\ o\ desporto.\n
comment5.params=desporto\ r
comment5.target=void\ inicializaRecorde(java.lang.String,\ RecordeGeral)
comment6.params=desporto
comment6.target=boolean\ existeRecorde(java.lang.String)
comment7.params=
comment7.target=java.lang.String\ listaRecordes()
comment7.text=\n\ Retorna\ a\ lista\ dos\ desportos\ presentes\ no\ quadro\ dos\ recordes\n
comment8.params=
comment8.target=java.lang.String\ recordeFutebol()
comment8.text=\n\ \ Todos\ estes\ metods\ devolvem\ uma\ string\ com\ as\ propriedades\ de\ cada\ recorde\n
comment9.params=
comment9.target=java.lang.String\ recordeGinasio()
numComments=16
